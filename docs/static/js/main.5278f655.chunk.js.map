{"version":3,"sources":["components/FC02CategoryAdd.js","helpers/HL01_GetFetchGifs.js","components/FC03GifGridItem.js","components/FC03GifGrid.js","hooks/useFetchGifs.js","components/FC01GifExpertApp.js","index.js"],"names":["FC02CategoryADD","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","xCat","type","value","onChange","target","HL01_GetFetchGifs","category","a","wURL","encodeURI","fetch","wResp","json","data","wArr_Gifs","map","xImg","id","title","url","images","downsized_medium","FC03GifGridItem","className","src","alt","FC03GifGrid","loading","state","setState","useEffect","then","xImgs","setTimeout","useFetchGifs","_Img","FC01GifExpertApp","categories","setCategories","xCateg","ReactDOM","render","document","getElementById"],"mappings":"yMAOO,SAASA,EAAT,GAA6C,IAAlBC,EAAiB,EAAjBA,cAEhC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACE,sBAAMC,SAnBW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAahB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SATlB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,mCCrBdG,EAAiB,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEzBC,EAFyB,iDAEwBC,UACrDH,GAH6B,+DAMXI,MAAMF,GANK,cAMzBG,EANyB,gBAQRA,EAAMC,OARE,uBAQvBC,EARuB,EAQvBA,KAEFC,EAAYD,EAAKE,KAAI,SAACC,GAAU,IAAD,EACnC,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,IAAG,UAAEH,EAAKI,cAAP,aAAE,EAAaC,iBAAiBF,QAdR,kBAoBxBL,GApBwB,4CAAH,sDCAjBQ,EAAkB,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAI3C,OACE,sBAAKI,UAAU,mDAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFGQ,EAAc,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAE5B,ECH0B,SAACA,GAE3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAlBAC,qBAAU,WAERzB,EAAkBC,GAAUyB,MAAK,SAACC,GAEhCC,YAAW,WAETJ,EAAS,CACPhB,KAAMmB,EACNL,SAAS,MAEV,UAGJ,CAACrB,IAKGsB,EDvB2BM,CAAa5B,GAAjCc,EAAd,EAAQP,KAAcc,EAAtB,EAAsBA,QAGtB,OACE,qCACE,oBAAIJ,UAAU,8CAAd,SAA6DjB,IAC5DqB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOL,KAAI,SAACoB,GAAD,OACV,cAAC,EAAD,eAAmCA,GAAbA,EAAKlB,aEZxBmB,EAAmB,WAG9B,MAAoC5C,mBAAS,CAAC,WAA9C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAEA,OACE,qCACE,gDACA,cAAChD,EAAD,CAAiBC,cAAe+C,IAChC,uBACA,6BACGD,EAAWtB,KAAI,SAACwB,GAAD,OACd,cAAC,EAAD,CAA0BjC,SAAUiC,GAAlBA,YCV5BC,IAASC,OAAO,cAAC,EAAD,IAAsBC,SAASC,eAAe,W","file":"static/js/main.5278f655.chunk.js","sourcesContent":["// INPUT CATEGORIAS\r\n\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\n\r\n// FC-ADD CATEGORY\r\nexport function FC02CategoryADD({ setCategorias }) {\r\n  // State\r\n  const [inputValue, setInputValue] = useState('');\r\n  //\r\n  const f00_Submit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('Submit OK');\r\n    //\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((xCat) => [inputValue, ...xCat]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  //\r\n  const f01_InputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n  //\r\n\r\n  //RENDER\r\n  return (\r\n    <form onSubmit={f00_Submit}>\r\n      <input type='text' value={inputValue} onChange={f01_InputChange} />\r\n    </form>\r\n  );\r\n}\r\n\r\nFC02CategoryADD.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","//\r\n// FETCH GIPHY\r\n//\r\nexport const HL01_GetFetchGifs = async (category) => {\r\n  //\r\n  const wURL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=wBU7I2BIV3XAmXvd1Ct1J7qi7xr4KHMP`;\r\n  //\r\n  const wResp = await fetch(wURL);\r\n  //\r\n  const { data } = await wResp.json();\r\n  //\r\n  const wArr_Gifs = data.map((xImg) => {\r\n    return {\r\n      id: xImg.id,\r\n      title: xImg.title,\r\n      url: xImg.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  // console.log(wArr_Gifs);\r\n  // setImages(wArr_Gifs);\r\n\r\n  return wArr_Gifs;\r\n};\r\n","//\r\nimport React from 'react';\r\n\r\nexport const FC03GifGridItem = ({ id, title, url }) => {\r\n  //\r\n  // console.log(id, title, url);\r\n  //\r\n  return (\r\n    <div className='card animate__animated animate__lightSpeedInLeft'>\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export const FC03GifGridItem = (img) => {\r\n// console.log(img);\r\n","// LISTA DE CATEGORIAS\r\n\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { FC03GifGridItem } from './FC03GifGridItem';\r\n//\r\n\r\n//\r\nexport const FC03GifGrid = ({ category }) => {\r\n  //\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  //\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__lightSpeedInLeft'>{category}</h3>\r\n      {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n      <div className='card-grid'>\r\n        {images.map((_Img) => (\r\n          <FC03GifGridItem key={_Img.id} {..._Img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","//\r\n// CUSTOM HOOK\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { HL01_GetFetchGifs } from '../helpers/HL01_GetFetchGifs';\r\n\r\n// HOOK\r\nexport const useFetchGifs = (category) => {\r\n  //\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  //\r\n  useEffect(() => {\r\n    //\r\n    HL01_GetFetchGifs(category).then((xImgs) => {\r\n      //\r\n      setTimeout(() => {\r\n        //\r\n        setState({\r\n          data: xImgs,\r\n          loading: false,\r\n        });\r\n      }, 2000);\r\n    });\r\n    //\r\n  }, [category]);\r\n\r\n  //\r\n\r\n  //\r\n  return state; // retorna: data & loading\r\n};\r\n","// MAIN. GIF EXPERT APP\r\n\r\nimport React, { useState } from 'react';\r\n//\r\nimport { FC02CategoryADD } from './FC02CategoryAdd';\r\nimport { FC03GifGrid } from './FC03GifGrid';\r\n//\r\nexport const FC01GifExpertApp = () => {\r\n  //\r\n\r\n  const [categories, setCategories] = useState(['XFiles']);\r\n  //\r\n  return (\r\n    <>\r\n      <h2>GIF EXPERT APP</h2>\r\n      <FC02CategoryADD setCategorias={setCategories} />\r\n      <hr></hr>\r\n      <ol>\r\n        {categories.map((xCateg) => (\r\n          <FC03GifGrid key={xCateg} category={xCateg} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n// Agrega Categorias 3 formas\r\n// const fn01_HandleAdd = () => {\r\n// 1 setCategories(['XFiles', ...categories]);\r\n// 2  setCategories((xCat) => [...categories, 'XFiles']);\r\n// };\r\n// 3 Crear Componente\r\n//\r\n//\r\n/* return <li key={xCateg}> {xCateg}</li>; */\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Style\nimport './index.css';\n\n// Componentes\nimport { FC01GifExpertApp } from './components/FC01GifExpertApp';\n\n// Render\nReactDOM.render(<FC01GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}